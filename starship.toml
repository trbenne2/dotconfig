# Starship default config, extracted from the source

# Configure the format of the prompt
format = """\
        $username\
        $hostname\
        $shlvl\
        $singularity\
        $kubernetes\
        $directory\
        $git_branch\
        $git_commit\
        $git_state\
        $git_status\
        $hg_branch\
        $docker_context\
        $package\
        (‚Üì Toolchain version modules ‚Üì)\
        $cmake\
        $dart\
        $dotnet\
        $elixir\
        $elm\
        $erlang\
        $golang\
        $helm\
        $java\
        $julia\
        $nim\
        $nodejs\
        $ocaml\
        $perl\
        $php\
        $purescript\
        $python\
        $ruby\
        $rust\
        $swift\
        $terraform\
        $zig\
        (‚Üë Toolchain version modules ‚Üë)\
        $nix_shell\
        $conda\
        $memory_usage\
        $gcloud\
        $env_var\
        $crystal\
        $cmd_duration\
        $custom\
        (‚Üë above input line ‚Üë)\
        $line_break\
        (‚Üì on input line ‚Üì)\
        $jobs\
        $battery\
        $time\
        $status\
        $character\
    """

# Timeout for starship to scan files (in milliseconds)
scan_timeout = 30

# Add a new line before the start of the prompt
add_newline = true

[battery]
disabled = false
full_symbol = "Ôï∏"
charging_symbol = "ÔñÉ"
discharging_symbol = "ÔñÇ"
format = "[$symbol$percentage]($style) "
[[battery.display]]
threshold = 10
style = "red bold"

[character]
disabled = false
format = "$symbol "
success_symbol = "[‚ùØ](bold green)"
error_symbol = "[‚ùØ](bold red)"
vicmd_symbol = "[‚ùÆ](bold green)"

[cmake]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "Ô®∂ "
style = "bold blue"

[cmd_duration]
disabled = false
min_time = 1500
format = "took [$duration]($style) "
show_milliseconds = false
style = "yellow bold"
show_notifications = false

[conda]
disabled = false
truncation_length = 1
format = "via [$symbol$environment]($style) "
symbol = "ÔÑå "
style = "green bold"
ignore_base = true

[crystal]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "Ôàô "
style = "bold red"

[dart]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "Óûò "
style = "bold blue"

[directory]
disabled = false
truncation_length = 3
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true
format = "[$path]($style)[$read_only]($read_only_style) "
style = "cyan bold"
read_only = "Ô†Ω"
read_only_style = "red"
truncation_symbol = ""

# [directory.substitutions]
# "/path/to/replace" = "string/symbol"

[env_var.DIRENV_ACTIVE]
variable = "DIRENV_DIR"
format = "via [direnv]($style) "
style = "bold yellow"


[docker_context]
disabled = false
symbol = "Ôåà "   # Docker whale
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["Dockerfile","docker-compose.yml","docker-compose.yaml",".dockerignore"]

[dotnet]
disabled = false
symbol = "Û∞™Æ "   # .NET / C#
format = "via [$symbol$version]($style) "
style = "blue bold"
heuristic = true
detect_extensions = ["cs","fs","vb"]
detect_files = ["global.json","*.csproj","*.fsproj","*.vbproj","Directory.Packages.props"]

[elixir]
disabled = false
format = 'via [$symbol$version \(OTP $otp_version\)]($style) '
symbol = "Óâµ "
style = "bold purple"

[elm]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "Óò¨ "
style = "cyan bold"

[env_var]
disabled = false
symbol = ""
style = "black bold dimmed"
# variable = ""
# default = ""
format = "with [$env_value]($style) "

[erlang]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "Óû± "
style = "bold red"

[gcloud]
disabled = false
format = 'on [$symbol$account(\($region\))]($style) '
symbol = "ÓåΩ "
style = "bold blue"

[git_branch]
disabled = false
symbol = "ÓÇ† "   # Git branch
format = "on [$symbol$branch]($style) "
style = "bold purple"
# truncation_length = 7 # default = 2^63 - 1
truncation_symbol = "‚Ä¶"

[git_commit]
disabled = false
commit_hash_length = 7
format = '[\($hash\)]($style) '
style = "green bold"
only_detached = true

[git_metrics]
disabled = false
added_style = "green bold"
deleted_style = "red bold"
format = " [+${added}](green bold) [-${deleted}](red bold)"

[git_state]
disabled = false
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "bold yellow"
format = '\([$state( $progress_current/$progress_total)]($style)\) '

[git_status]
disabled = false
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "red bold"
stashed = '\$'
ahead = "‚á°"
behind = "‚á£"
diverged = "‚áï"
conflicted = "="
deleted = "‚úò"
renamed = "¬ª"
modified = "!"
staged = "+"
untracked = "?"

[golang]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "Óòß "
style = "bold cyan"

[helm]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "‚éà "
style = "bold white"

[hostname]
disabled = false
ssh_only = true
trim_at = "."
format = "[$hostname]($style) in "
style = "green dimmed bold"

[java]
disabled = false
format = "via [$symbol$version]($style) "
style = "red dimmed"
symbol = "Óâñ "

[jobs]
disabled = false
threshold = 1
format = "[$symbol$number]($style) "
symbol = "‚ú¶"
style = "bold blue"

[julia]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "Óò§ "
style = "bold purple"

[kubernetes]
disabled = false
symbol = "‚ò∏ "
format = '[$symbol$context( \($namespace\))]($style) in '
style = "cyan bold"
detect_files = ["k8s","Chart.yaml","values.yaml","values.yml","kustomization.yaml","kustomization.yml"]
# Trim noisy context names like gke_... or arn:aws:eks:...
context_aliases = { "arn:aws:eks:.*:cluster/(.*)" = "$1", "gke_.*_(.*)_(.*)" = "$1/$2" }


[line_break]
disabled = false

[memory_usage]
disabled = true
threshold = 75
format = "via $symbol[$ram( | $swap)]($style) "
style = "white bold dimmed"
symbol = "Ô°ö "

# Mercurial
[hg_branch]
disabled = false
symbol = "Ôêò "
style = "bold purple"
format = "on [$symbol$branch]($style) "
# truncation_length = 8 # default = 2^63 - 1
truncation_symbol = "‚Ä¶"

[nim]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "Ôö§ "
style = "yellow bold"

[nix_shell]
disabled = false
format = 'via [$symbol$state( \($name\))]($style) '
symbol = "Ôãú  "
style = "bold blue"
impure_msg = "impure"
pure_msg = "pure"

[nodejs]
disabled = false
symbol = "Óúò "   # Node.js logo
format = "via [$symbol$version]($style) "
style = "bold green"
detect_extensions = ["js","mjs","cjs","ts","tsx","jsx"]
detect_files = ["package.json","pnpm-lock.yaml","yarn.lock","package-lock.json","bun.lockb"]
detect_folders = ["node_modules"]

[ocaml]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "üê´ "
style = "bold yellow"

[package]
disabled = false
symbol = "Û∞èó "   # Box/package
format = "is [$symbol$version]($style) "
style = "208 bold"
display_private = true

[perl]
disabled = false
symbol = "Óù© "
style = "149 bold"
format = "via [$symbol$version]($style) "

[php]
disabled = false
symbol = "Óòà "
style = "147 bold"
format = "via [$symbol$version]($style) "

[purescript]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "<=> "
style = "bold white"

[python]
disabled = false
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = "python3"
detect_extensions = ["py", "ipynb"]
detect_files = ["requirements.txt", "pyproject.toml", "setup.py", "Pipfile"]
detect_folders = [".venv", "venv", ".conda"]
symbol = "Óàµ "
format = 'via [${symbol}${version}( \($virtualenv\))]($style) '
style = "yellow bold"

[ruby]
disabled = false
symbol = "Óûë "   # Ruby gem logo
format = "via [$symbol$version]($style) "
style = "bold red"
detect_files = ["Gemfile","Gemfile.lock","*.gemspec","Rakefile"]
detect_extensions = ["rb"]

[rust]
disabled = false
symbol = "Óû® "   # Rust gear
format = "via [$symbol$version]($style) "
style = "bold red"

[shlvl]
disabled = true
threshold = 2
format = "[$symbol$shlvl]($style) "
symbol = "‚Üï"
style = "bold yellow"

[singularity]
disabled = false
format = '[$symbol\[$env\]]($style) '
symbol = ""
style = "blue bold dimmed"

[swift]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "ÔØ£ "
style = "bold 202"

[status]
disabled = true
format = "[$symbol$status]($style) "
symbol = "‚úñ"
style = "bold red"

[terraform]
disabled = false
symbol = "Û±Å¢ "   # Terraform glyph
format = "via [$symbol$workspace]($style) "
style = "bold 105"
detect_extensions = ["tf","tfvars"]
detect_files = [".terraform.lock.hcl"]
detect_folders = [".terraform"]

[time]
disabled = true
format = "at [$time]($style) "
style = "bold yellow"
use_12hr = false
time_format = ""
utc_time_offset = "local"
time_range = "-"

[username]
disabled = false
format = "[$user]($style) in "
style_root = "red bold"
style_user = "yellow bold"
show_always = false

[zig]
disabled = false
format = "via [$symbol$version]($style) "
symbol = "‚ÜØ "
style = "bold yellow"
#EOF.